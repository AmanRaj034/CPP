<snippet>
	<content><![CDATA[
//(Ordered set or policy based data structure) (alternative treap)
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key

//  order_of_key gives number of element is smaller than key
// find_by_order iterator at k th positon

// For storing multiple value use pair<int,int> in place of int and store {value,index(timer)} in pbds;
// By using less_equal it behaves like mulitset (not use this method many drawback like ms.erase(iterator) not works).

// If we want by defaut order in descending order
//typedef tree<int, null_type, greater<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;

// If we want to change type of input like from int to string or char or any data types then change int to that data type
// ed tree<char,null_type,less<char>
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>pbds</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
