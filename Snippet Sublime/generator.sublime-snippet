<snippet>
	<content><![CDATA[
#include "bits/stdc++.h"
using namespace std;
#define ll long long int
#define un unsigned long long
#define all(v) v.begin(),v.end()
#define pb push_back
#define sz(x) ((int)(x).size())
using li = long long;
using i64 = long long;
#define allr(v) v.rbegin(),v.rend()
const ll M = 1e9;

#ifndef ONLINE_JUDGE
#include "devil_fruit.h"
#else
#define debug(x...)
#define debugArr(arr, n)
#endif


ll help(ll n, vector<ll>&v)
{

}

ll help1(ll n, vector<ll>&v)
{

}

void solve()
{
	srand(time(NULL));
	while (1)
	{
		$1
		ll n = rand() % 5 + 1;
		vector<ll>v(n), v1;
		for (ll i = 0; i < n; ++i)
		{
			v[i] = rand() % 10 + 1;
		}
		v1 = v;
		vector<ll>v2 = v;
		ll x = help(n, v), y = help1(n, v1);
		if (x != y)
		{
			debug(n, v2, x, y);
			break;
		}
	}

}

int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	// freopen("input.txt", "r", stdin);
	// freopen("output.txt", "w", stdout);
	int t = 1;
	// cin >> t;
	for (int i = 1; i <= t; ++i)
	{
#ifndef ONLINE_JUDGE
		// cout << "\n______Test : " << i << "\n\n";
#endif
		solve();
	}
#ifndef ONLINE_JUDGE
	cout << "\nDone!";
#endif
	return 0;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>generator</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
